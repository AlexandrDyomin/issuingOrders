//- <!DOCTYPE html>
//- <html lang="en">
//- <head>
//-     <meta charset="UTF-8">
//-     <meta http-equiv="X-UA-Compatible" content="IE=edge">
//-     <meta name="viewport" content="width=device-width, initial-scale=1.0">
//-     <title>Document</title>
//- </head>
//- <body>
//-     <main class="page">
//-         <form action="" method="post">
//-             <div class="field">
//-                 <label>
//-                     <input type="text">
//-                     Номер наряда
//-                 </label>
//-             </div>
//-             <div class="field">
//-                 <fieldset>
//-                     <legend>Ответственный руководитель работ</legend>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Дёмин А.П. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Сержанков С.Н. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Бахтияров Р.В. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Корнеев А.А. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Аглеев Р.А. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Черенко А.С. гр. V
//-                     </label>
//-                 </fieldset>
//-             </div>
//-             <div class="field">
//-                 <fieldset>
//-                     <legend>Наблюдающий</legend>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Дёмин А.П. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Сержанков С.Н. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Бахтияров Р.В. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Корнеев А.А. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Аглеев Р.А. гр. V
//-                     </label>
//-                     <label>
//-                         <input type="radio" name="leader">
//-                         Черенко А.С. гр. V
//-                     </label>
//-                 </fieldset>
//-             </div>
            
//-         </form>
//-     </main>
//- </body>
//- </html>
doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        mete(http-equiv="X-UA-Compatible" content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title Document
        include ./src/parts/plate.pug
        include ./src/parts/input.pug
        style. 
            /* Reset and base styles  */
            * {
                padding: 0px;
                margin: 0px;
                border: none;
            }

            *,
            *::before,
            *::after {
                box-sizing: border-box;
            }

            /* Links */

            a, a:link, a:visited  {
                text-decoration: none;
            }

            a:hover  {
                text-decoration: none;
            }

            /* Common */

            aside, nav, footer, header, section, main {
                display: block;
            }

            h1, h2, h3, h4, h5, h6, p {
                font-size: inherit;
                font-weight: inherit;
            }

            ul, ul li {
                list-style: none;
            }

            img {
                vertical-align: top;
            }

            img, svg {
                max-width: 100%;
                height: auto;
            }

            address {
            font-style: normal;
            }

            /* Form */

            input, textarea, button, select {
                font-family: inherit;
                font-size: inherit;
                color: inherit;
                background-color: transparent;
            }

            input::-ms-clear {
                display: none;
            }

            button, input[type="submit"] {
                display: inline-block;
                box-shadow: none;
                background-color: transparent;
                background: none;
                cursor: pointer;
            }

            input:focus, input:active,
            button:focus, button:active {
                outline: none;
            }

            button::-moz-focus-inner {
                padding: 0;
                border: 0;
            }

            label {
                cursor: pointer;
            }

            legend {
                display: block;
            }


            html {
                font-size: 10px;
            }
        body 
        //- input(type="button" value="send data")
        //- iframe
        +plate
            .wrap 
                h3 Номер наряда
                +input(type='number' min='1')
        style. 
            .wrap {
                display: flex;
                align-items: center;
                gap: 2rem;
            }

            h3 {
                min-width: max-content;
            }
            




        style.
            iframe {
                width: 80vw;
                height: 80vh;
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right:0;
                margin:auto;
            }

        script.
            let formData = {
                number: '26',
                leader: 'Дёмин А.П. гр. V',
                allowing: 'Дёмин А.П. гр. V',
                foreman: 'Лунёв В.В. гр. V',
                watching: 'не назначается',
                startDate: '19.06.23',
                endDate: '19.06.23',
                startTime: '14:40',
                endTime: '20:00',
                giving: 'Пшенковский В.А. гр. V',
                workers: [
                    'Мункуев В.С. гр. V', 'Дымбрылов Э.Г. гр. V', 'Лутай Е.В. гр. V', 'Мункуев В.С. гр. V', 'Дымбрылов Э.Г. гр. V', 'Лутай Е.В. гр. V'
                ],
                overhedLine: 'ВЛ-6кВ Л 4-1',
                support: 'оп. № 99-101',
                dateIssue: '23.06.23',
                timeIssue: '11:01'
            }


            function processData(data) {
                let processedData = [];
                let emptyObj = {
                    number: '',
                    additionalOrder: '',
                    leader: '',
                    allowing: '',
                    foreman: '',
                    watching: '',
                    workers1: '',
                    workers2: '',
                    startDate: '',
                    endDate: '',
                    startTime: '',
                    endTime: '',
                    giving: '',
                    worker1: '',
                    worker2: '',
                    worker3: '',
                    overhedLine: '',
                    support: '',
                    dateIssue: '',
                    timeIssue: ''
                }
                let groups = prepareDataForTables(data.workers);
                let strings = prepareStringsWithWorkers(data.workers);
                
                for (let i = 0; i < groups.length; i++) {
                    let group = groups[i];
                    let str = strings[i] || {};
                    let firstObj = i === 0 ? data : emptyObj;
                    let obj = { 
                        ...firstObj, 
                        ...group, 
                        ...str,
                        number : data.number,
                        dateIssue: data.dateIssue,
                        timeIssue: data.timeIssue,
                        additionalOrder: i === 0 ? '' : 'Дополнительный бланк',
                        giving: formData.giving
                    };
                    processedData.push(obj);
                }
                delete processedData[0].workers;

                return processedData; 


                function prepareDataForTables(workers, start = 0) {
                    let numberOfWorkerGroups = calcNumberOfWorkerGroups();
                    let groups = [];
                
                    (function split(start) {
                        if (start === numberOfWorkerGroups - 1) {
                            groups.push(createObj(workers.slice(start*2)));
                            return;
                        }
                
                        let arr = workers.slice(start*2, start*2+2);
                        arr.push('См. дополнительный бланк');
                        groups.push(createObj(arr));
                        
                        split(++start);
                    })(start);
                
                    return groups;
                
                    function calcNumberOfWorkerGroups() {
                        const maxNumberWorkers = 3;
                        if (workers.length <= maxNumberWorkers) {
                            var numberOfWorkerGroups = 1;
                        }
                        numberOfWorkerGroups  = Math.ceil(numberOfWorkerGroups || (workers.length - maxNumberWorkers) / (maxNumberWorkers - 1) + 1);
                        return numberOfWorkerGroups;
                    }
                
                    function createObj(arr) {
                        let obj = {};
                        for (let i = 0, prop = 'worker'; i < 3; i++) {
                            let value = arr[i] ? deleteGroup(arr[i]) : '';
                            obj[prop + (i + 1)] = value;
                        }
                        return obj;
                    }
                
                    function deleteGroup(str) {
                        return str.replace(/\sгр.\s\D+/, '');
                    }
                }


                function prepareStringsWithWorkers(workers, start = 0) {
                    const WORKERS_LINE_1_LENGTH = 80;
                    const WORKERS_LINE_2_LENGTH = 105;
                    let strings = [];
                    
                    (function prepare(start) {
                        let separator = '';
                        for (var i = start, str1 = '', str2 = '', stop; i < workers.length; i++) {
                            if (str1.length + workers[i].length + separator.length <= WORKERS_LINE_1_LENGTH) {
                                separator = ', '
                                str1 += workers[i] + separator;
                                continue;
                            }
                            stop = i;
                            separator = '';
                            for (let i = stop; i < workers.length; i++) {
                                if (str2.length + workers[i].length + separator.length <= WORKERS_LINE_2_LENGTH) {
                                    separator = ', ';
                                    str2 += workers[i] + separator;
                                    continue;
                                }
                                str2 = 'См. дополнительный бланк';
                                break;
                            }
                            break;
                        }
                        
                        str1 = str1.replace(/\s$/, '');
                        if (str2 !== 'См. дополнительный бланк') {
                            str1 = str2 ? str1 : str1.replace(/,$/, '');
                
                            str2 = str2.replace(/(,\s)$/, '');
                            strings.push({workers1: str1, workers2: str2});
                            return;
                        }
                        
                        strings.push({workers1: str1, workers2: str2});
                        prepare(stop);
                    })(start)
                
                    return strings;
                }
            }


            let btn = document.querySelector('input[type=button]');
            btn.onclick = async function sendData() {
                const data = JSON.stringify(processData(formData));
                let url = 'http://localhost:8000/order';
                let res = await fetch(url, {
                    method: 'POST',
                    body: data
                })

                res = await res.blob();

                url = URL.createObjectURL(res);
                let ifr = document.querySelector('iframe');
                ifr.src = url;
            }